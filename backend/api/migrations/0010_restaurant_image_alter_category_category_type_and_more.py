# Generated by Django 5.1.7 on 2025-04-29 19:48

import backend.storages_backend
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0009_category_category_type'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='restaurant',
            name='image',
            field=models.ImageField(default=0, storage=backend.storages_backend.RestaurantStorage(), upload_to=''),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='category',
            name='category_type',
            field=models.CharField(choices=[('Base', 'base'), ('topping', 'Topping')], default='base', max_length=100),
        ),
        migrations.AlterUniqueTogether(
            name='restaurant',
            unique_together={('restaurant_name', 'address')},
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='api.restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'restaurant')},
            },
        ),
        migrations.CreateModel(
            name='HomeCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=200)),
                ('image', models.ImageField(storage=backend.storages_backend.HomeStorage(), upload_to='')),
                ('rating', models.DecimalField(decimal_places=2, max_digits=3)),
                ('categories', models.ManyToManyField(blank=True, related_name='home_cards', to='api.category')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('rating__gte', 0), ('rating__lte', 5)), name='home_card_rating_between_0_and_5')],
            },
        ),
    ]
